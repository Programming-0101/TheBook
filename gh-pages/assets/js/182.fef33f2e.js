(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{265:function(t,e,s){"use strict";s.r(e);var i=s(0),n=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"person"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#person","aria-hidden":"true"}},[t._v("#")]),t._v(" Person")]),s("p",[t._v("This simple class was used to introduce the idea of encapsulation (private fields with public properties). This example uses a constructor for ensuring the state of an object when it is instantiated (created). It also demonstrates the overriding of the ToString() method inherited from the Object method.")]),s("p",[s("img",{attrs:{src:"D-Person-2.png",alt:"Person Class Diagram"}})]),s("p",[t._v("Should…")]),s("ul",[s("li",[t._v("Instantiate (build) from constructor")]),s("li",[t._v("Get/Set First Name")]),s("li",[t._v("Get/Set Last Name")]),s("li",[t._v("Get/Set Age")]),s("li",[t._v("Override ToString() to get the person’s full name (as first name then last name)")])])])}],!1,null,null,null);e.default=n.exports}}]);