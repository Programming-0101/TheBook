(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{261:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"account"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#account","aria-hidden":"true"}},[t._v("#")]),t._v(" Account")]),n("p",[t._v('This class illustrates simple addition and calculation by allowing deposits and withdrawals. Note that changes to the balance can now only be made through deposits and withdrawals; the balance is now "read-only".')]),n("p",[n("strong",[t._v("Problem Statement")])]),n("p",[t._v("Write the code that will represent a simple bank account.")]),n("p",[t._v("The solution must meet the following requirements (new requirements are in "),n("strong",[t._v("bold")]),t._v("):")]),n("ul",[n("li",[t._v("Should get the bank name, branch number, institution number, account number, balance, overdraft limit, and account type")]),n("li",[t._v("Should allow the overdraft limit to be set")]),n("li",[n("strong",[t._v("Should support deposits and withdrawals")])])]),n("p",[t._v("Use the following class diagram when creating your solution.")]),n("p",[n("img",{attrs:{src:"E-Account.png",alt:"Account Class Diagram"}})]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[t._v("  "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Withdraw")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("double")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Balance "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Deposit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("double")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Balance "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);