(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{241:function(t,a,s){t.exports=s.p+"assets/img/F-Account.6a827fd2.png"},366:function(t,a,s){"use strict";s.r(a);var n=[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"account"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#account","aria-hidden":"true"}},[t._v("#")]),t._v(" Account")]),n("p",[t._v("This class illustrates simple if structure in handling withdrawals; withdrawals are only made when the amount does not exceed the balance and the overdraft. It also identifies if the account is overdrawn.")]),n("p",[n("strong",[t._v("Problem Statement")])]),n("p",[t._v("Write the code that will represent a simple bank account. The solution must meet the following requirements (new requirements are in bold):")]),n("ul",[n("li",[t._v("Should get the bank name, branch number, institution number, account number, balance, overdraft limit, and account type and allow the overdraft limit to be set")]),n("li",[t._v("Should support deposits")]),n("li",[n("strong",[t._v("Should only support withdrawals if the amount does not exceed the sum of the balance and the overdraft limit")])]),n("li",[n("strong",[t._v("Should identify if the account is overdrawn")])])]),n("p",[t._v("Use the following class diagram when creating your solution.")]),n("p",[n("img",{attrs:{src:s(241),alt:"Account Class Diagram"}})]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[t._v("  "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Withdraw")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("double")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount "),n("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" Balance "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" OverdraftLimit"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          Balance "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Balance "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n          amount "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" IsOverdrawn\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),t._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" overdrawn"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Balance "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              overdrawn "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n              overdrawn "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" overdrawn"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],e=s(0),o=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);a.default=o.exports}}]);