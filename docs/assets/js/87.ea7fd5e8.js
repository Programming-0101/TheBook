(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{343:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),a("ol",[a("li",[a("router-link",{attrs:{to:"Aggregator.html"}},[e._v("Aggregator")]),e._v(" – The Aggregator class supports static methods for doing various types of aggregation on Numbers. (Numbers is a supplied class that stores a series of real values that can be obtained by calling getNext().) The common aggregations of totalItems(), averageItems(), maxValue() are given as examples of simple looping.")],1),a("li",[a("router-link",{attrs:{to:"Math.html"}},[e._v("Math")]),e._v(" – fibonnacciNumber() and isPerfect()")],1),a("li",[a("router-link",{attrs:{to:"Fraction.html"}},[e._v("Fraction")]),e._v(" – The fraction example is now enhanced to simplify the fractional value by finding the greatest common denominator of the fraction’s numerator and denominator.")],1),a("li",[a("router-link",{attrs:{to:"GuessingGame.html"}},[e._v("GuessingGame")]),e._v(" – This example uses a supplied class called SecretNumber, which picks a random whole number between a specific range. An instance of the SecretNumber is passed to the constructor of the GuessingGame, and the GuessingGame’s guess() method attempts to get the correct guess within a specified number of tries.")],1)])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"code-samples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-samples","aria-hidden":"true"}},[this._v("#")]),this._v(" Code Samples")])}],!1,null,null,null);t.default=r.exports}}]);