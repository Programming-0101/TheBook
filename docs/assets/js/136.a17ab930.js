(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{231:function(t,n,a){t.exports=a.p+"assets/img/G-Fraction.fb4629ad.png"},392:function(t,n,a){"use strict";a.r(n);var s=[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"fraction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fraction","aria-hidden":"true"}},[t._v("#")]),t._v(" Fraction")]),s("p",[t._v("The fraction class avoids the division by zero error by ensuring that the supplied denominator is not zero.")]),s("p",[s("strong",[t._v("Problem Statement")])]),s("p",[t._v("Write the code for the Fraction class. The solution must meet the following requirements (new requirements are in "),s("strong",[t._v("bold")]),t._v("):")]),s("ul",[s("li",[t._v('Should get the string representation of the fraction, as "numerator/denominator"')]),s("li",[t._v("Should get the numeric value of the fraction (as a real number)")]),s("li",[t._v("Should get the reciprocal of the fraction")]),s("li",[t._v("Should get the numerator and denominator")]),s("li",[t._v("Should add another fraction to its existing value")]),s("li",[t._v("Should subtract another fraction from its existing value")]),s("li",[t._v("Should multiply its existing value by another fraction")]),s("li",[t._v("Should divide its existing value by another fraction")]),s("li",[t._v("Should affix the sign for negative fractions onto the numerator only")]),s("li",[t._v("Should identify if the fraction is a proper fraction")]),s("li",[s("strong",[t._v("Should reject zero denominators")])])]),s("p",[t._v("Use the following class diagram when creating your solution.")]),s("p",[s("img",{attrs:{src:a(231),alt:""}})]),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Fraction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" numerator"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" denominator"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("denominator "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("System"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"A fraction cannot have a denominator of zero (0)"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Numerator "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" numerator"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Denominator "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" denominator"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("FixSign")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],o=a(0),e=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},s,!1,null,null,null);n.default=e.exports}}]);