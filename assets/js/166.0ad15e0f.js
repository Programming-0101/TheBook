(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{466:function(e,s,t){"use strict";t.r(s);var i=t(17),a=Object(i.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"c-starting-with-encapsulation-in-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-starting-with-encapsulation-in-classes"}},[e._v("#")]),e._v(" C â€“ Starting With (Encapsulation in) Classes")]),e._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),t("p",[e._v("This topic introduces some of the basic syntax and grammar surrounding Object-Oriented Programming in C#. The following keywords are introduced. (Note that additional keywords from previous topics may also be present.)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("private")])]),e._v(" "),t("li",[t("code",[e._v("this")])]),e._v(" "),t("li",[t("code",[e._v("bool")])]),e._v(" "),t("li",[t("code",[e._v("true")])]),e._v(" "),t("li",[t("code",[e._v("false")])]),e._v(" "),t("li",[t("code",[e._v("DateTime")])]),e._v(" "),t("li",[t("code",[e._v("ReadOnly")])])]),e._v(" "),t("p",[e._v("This topic will also introduce the following grammars, syntax and language constructs. (Note that additional concepts from previous topics may also be present.)")]),e._v(" "),t("ul",[t("li",[e._v("Private fields (encapsulation)")]),e._v(" "),t("li",[e._v("Read-Only fields")]),e._v(" "),t("li",[e._v("Public properties (encapsulation)")]),e._v(" "),t("li",[e._v("Constructor syntax")]),e._v(" "),t("li",[e._v("Object instantiation with parameterized constructors")]),e._v(" "),t("li",[e._v("Overriding the Object's ToString() method")])]),e._v(" "),t("h3",{attrs:{id:"daily-logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#daily-logs"}},[e._v("#")]),e._v(" Daily LOGs")]),e._v(" "),t("p",[e._v("The following daily LOGs are covered in this package.")]),e._v(" "),t("h4",{attrs:{id:"oop-basics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oop-basics"}},[e._v("#")]),e._v(" OOP Basics")]),e._v(" "),t("ul",[t("li",[e._v('Define the term "encapsulation" as used in OOP')]),e._v(" "),t("li",[e._v("Explain why encapsulation is a good design principle")]),e._v(" "),t("li",[e._v('Define the term "access specifier" and identify where it occurs in the code for a class')]),e._v(" "),t("li",[e._v("List the two access specifiers that are used in this course")]),e._v(" "),t("li",[e._v('Describe the difference between "private" and "public" members of a class')]),e._v(" "),t("li",[e._v('Describe the concepts of "properties" as used in OOP')]),e._v(" "),t("li",[e._v('Define the term "backing store" as it applies to properties and fields')]),e._v(" "),t("li",[e._v("Describe and explain the purpose and function of a constructor for a class")]),e._v(" "),t("li",[e._v("Describe the syntax of a class constructor")]),e._v(" "),t("li",[e._v('Identify when a class constructor is "called"')]),e._v(" "),t("li",[e._v('Define the term "class scope" as used in OOP')]),e._v(" "),t("li",[e._v('Define the term "local scope" as used in OOP')]),e._v(" "),t("li",[e._v('Define the term "state" as applied to objects used in OOP')]),e._v(" "),t("li",[e._v('Define the term "override" as used in OOP')]),e._v(" "),t("li",[e._v("Explain the purpose and function of the ToString() method and why we sometimes want to change its default behaviour when we create classes")]),e._v(" "),t("li",[e._v("Create simple class diagrams to represent classes")])]),e._v(" "),t("h4",{attrs:{id:"general-programming-concepts-and-terms"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#general-programming-concepts-and-terms"}},[e._v("#")]),e._v(" General Programming Concepts and Terms")]),e._v(" "),t("ul",[t("li",[e._v("List three levels of scope")])])])}),[],!1,null,null,null);s.default=a.exports}}]);