(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{554:function(e,t,i){"use strict";i.r(t);var a=i(0),s=Object(a.a)({},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"topic-k-looping-and-collections"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#topic-k-looping-and-collections","aria-hidden":"true"}},[e._v("#")]),e._v(" Topic K - Looping and Collections")]),e._v(" "),i("h2",{attrs:{id:"overview"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),i("p",[e._v("This topic provides further examples of looping logic, but involves the use of collections. All of these samples make use of the "),i("code",[e._v("List<T>")]),e._v(" class to maintain a collection or group of objects.")]),e._v(" "),i("p",[e._v("The "),i("code",[e._v("List<T>")]),e._v(" class is a Generic class, meaning that the item in the angled brackets - "),i("code",[e._v("<T>")]),e._v(" - is a placeholder for the name of the actual class that is being managed in the List. For example, to have a list of Integers we would declare that as "),i("code",[e._v("List<int>")]),e._v(". Likewise, if we wanted a list of Student objects, it would be declared as "),i("code",[e._v("List<Student>")]),e._v(".")]),e._v(" "),i("p",[e._v("The "),i("code",[e._v("List<T>")]),e._v(" class supports a number of methods and properties for working with the collection.")]),e._v(" "),i("ul",[i("li",[e._v("Add() – Used to add an item to the collection")]),e._v(" "),i("li",[e._v("[index] – Used to retrieve an item in the collection")]),e._v(" "),i("li",[e._v("Remove() – Used to remove an item from the collection")]),e._v(" "),i("li",[e._v("Count – Identifies the number of items in the collection")])]),e._v(" "),i("h3",{attrs:{id:"logs"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#logs","aria-hidden":"true"}},[e._v("#")]),e._v(" LOGs")]),e._v(" "),i("h4",{attrs:{id:"oop-basics"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#oop-basics","aria-hidden":"true"}},[e._v("#")]),e._v(" OOP Basics")]),e._v(" "),i("ul",[i("li",[e._v("Define the term Generics as used in C# and give an example")])]),e._v(" "),i("h4",{attrs:{id:"general-programming-concepts-and-terms"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#general-programming-concepts-and-terms","aria-hidden":"true"}},[e._v("#")]),e._v(" General Programming Concepts and Terms")]),e._v(" "),i("ul",[i("li",[e._v("Describe what is meant by a “collection” class and give an example")]),e._v(" "),i("li",[e._v("List and describe the common methods of collection classes such as the "),i("code",[e._v("List<T>")])]),e._v(" "),i("li",[e._v("Identify the parts of the foreach statement")]),e._v(" "),i("li",[e._v("Describe the common situations in which the foreach statement is typically used")]),e._v(" "),i("li",[e._v("Identify the major benefit of using Generics")]),e._v(" "),i("li",[e._v("List the major benefits of using collections instead of arrays")])])])},[],!1,null,null,null);t.default=s.exports}}]);