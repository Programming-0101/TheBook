(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{375:function(t,e,s){"use strict";s.r(e);var i=s(0),n=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("The following examples are used to illustrate this topic.")]),t._v(" "),s("ol",[s("li",[s("router-link",{attrs:{to:"./Person.html"}},[t._v("Person")]),t._v(" - This simple class was used to introduce the idea of encapsulation (private fields with public getters and setters). This example uses a constructor for ensuring the state of an object when it is instantiated (created). In this topic, it is used to demonstrate unit testing.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"./Account.html"}},[t._v("Account")]),t._v(" - This simple class also illustrates encapsulation, but with some of the fields being read-only. This class uses a constructor (which is also necessary for getting state into fields which do not have corresponding setter methods).")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"./Student.html"}},[t._v("Student")]),t._v(" - This class reinforces the idea of encapsulation and constructors. It also demonstrates the idea of overloading the default ToString() method that every class inherits from the Object class.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"./Employee.html"}},[t._v("Employee")]),t._v(" â€“ The Employee class represents basic information about an employee of a company.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"./Company.html"}},[t._v("Company")]),t._v(' - These are other classes similar to the Person and Student classes. These classes, however, "share" a driver, illustrating the fact that any given "program" typically uses more than one class.')],1)]),t._v(" "),t._m(1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"code-samples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-samples","aria-hidden":"true"}},[this._v("#")]),this._v(" Code Samples")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Test Drivers (Console I/O)"),e("br"),this._v("\nTBA"),e("br"),this._v("\nUnit Tests (nUnit)"),e("br"),this._v('\nThe unit tests for these classes are included in the solution folder under the "Demos + Practice" folder. Simply double-click the NUnit Test Project (.nunit) and the tests will open in the NUnit GUI.')])}],!1,null,null,null);n.options.__file="ReadMe.md";e.default=n.exports}}]);