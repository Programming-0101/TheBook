(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{236:function(t,s,a){t.exports=a.p+"assets/img/G-Die.321e8f32.png"},430:function(t,s,a){"use strict";a.r(s);var e=[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"die"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#die","aria-hidden":"true"}},[t._v("#")]),t._v(" Die")]),t._v(" "),e("p",[t._v("Only accepts from 4 to 20 sides for a die. This class represents a single six-sided die. This example is used to illustrate random number generation and casting.")]),t._v(" "),e("p",[e("strong",[t._v("Problem Statement")])]),t._v(" "),e("p",[t._v("Write the code for the Die class. The solution must meet the following requirements (new requirements are in "),e("strong",[t._v("bold")]),t._v("):")]),t._v(" "),e("ul",[e("li",[t._v("Should generate a random value from 1 to the number of sides on the die, when initially created and when re-rolled")]),t._v(" "),e("li",[t._v("Should get the face value of the die")]),t._v(" "),e("li",[t._v("Should get the number of sides of the die")]),t._v(" "),e("li",[t._v("Should randomly generate each side (if rolled enough); for example, if the die has ten sides, it should eventually roll a 1, 2, 3, 4, 5 6, 7, 8, 9, and 10")]),t._v(" "),e("li",[e("strong",[t._v("Should only accept 4 to 20 sides for the die")])])]),t._v(" "),e("p",[t._v("Use the following class diagram when creating your solution.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(236),alt:""}})]),t._v(" "),e("div",{staticClass:"language-csharp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-csharp"}},[e("code",[t._v("    "),e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("Die")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sides"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sides "),e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" sides "),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("20")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("System"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v('"A die can only have from 4 to 20 sides"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sides "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sides"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{attrs:{class:"token function"}},[t._v("Roll")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);o.options.__file="Die.md";s.default=o.exports}}]);