(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{279:function(t,s,a){t.exports=a.p+"assets/img/G-Circle.1b3b6f34.png"},480:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"circle"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#circle","aria-hidden":"true"}},[t._v("#")]),t._v(" Circle")]),t._v(" "),n("p",[t._v("Only accepts positive, non-zero diameters.")]),t._v(" "),n("p",[n("strong",[t._v("Problem Statement")])]),t._v(" "),n("p",[t._v("Write the code for the Circle class. The solution must meet the following requirements (new requirements are in "),n("strong",[t._v("bold")]),t._v("):")]),t._v(" "),n("ul",[n("li",[t._v("Should get and set the diameter")]),t._v(" "),n("li",[t._v("Should calculate the area, radius, and circumference")]),t._v(" "),n("li",[n("strong",[t._v("Should only accept positive, non-zero lengths for the diameter")])])]),t._v(" "),n("p",[t._v("Use the following class diagram when creating your solution.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(279),alt:""}})]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[t._v("    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("double")]),t._v(" _Diameter"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("double")]),t._v(" Diameter\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _Diameter"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("System"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Diameter must be a positive non-zero value"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            _Diameter "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("value")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);e.options.__file="Circle.md";s.default=e.exports}}]);