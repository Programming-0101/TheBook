(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{266:function(t,a,s){t.exports=s.p+"assets/img/Math-vs-Coding.a2fff410.png"},468:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"topic-e-–-expressions-and-math"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#topic-e-–-expressions-and-math","aria-hidden":"true"}},[t._v("#")]),t._v(" Topic E – Expressions and Math")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Overview & Logs")]),t._v(" "),e("p",[t._v("If you want a quick bullet-list of the the keywords and topics covered, see the "),e("router-link",{attrs:{to:"/Topic/E/Overview.html"}},[e("strong",[t._v("Overview")])]),t._v(". If you want to check yourself on what you're learning, run through the "),e("router-link",{attrs:{to:"/Topic/E/LOGs.html"}},[e("strong",[t._v("Learning Outcome Guide")])]),t._v(" for this topic. You can also jump to the code in "),e("router-link",{attrs:{to:"/Topic/E/Examples/"}},[e("strong",[t._v("Examples")])]),t._v(" or "),e("router-link",{attrs:{to:"/Topic/E/Practice/"}},[e("strong",[t._v("Practice")])]),t._v(".")],1)]),t._v(" "),e("p",[t._v("Doing math and writing code are not the same thing. Sure, there's overlap between math and coding, but there are a lot of significant (if under-recognized) differences.")]),t._v(" "),e("p",[t._v("For example, let's look at the humble equal sign: "),e("code",[t._v("=")]),t._v('. In math, the equal sign means "both sides '),e("em",[t._v("are")]),t._v(' the same". In coding, it '),e("em",[t._v("never")]),t._v(" means that! In coding, the equal sign is called the "),e("strong",[t._v("assignment operator")]),t._v(" and it's purpose is to "),e("em",[t._v("store")]),t._v(" information.")]),t._v(" "),e("p",[t._v("That's not the only difference in regards to the equal sign. Note that there is a left-hand side ("),e("em",[t._v("lh")]),t._v(") of the equal sign, and a right-hand side ("),e("em",[t._v("rh")]),t._v(") of the equal sign. In math, you can have any kind of expression on the left-hand side and the right-hand side. In C#, the item on the left-hand of an equal sign "),e("em",[t._v("must")]),t._v(" be a variable (because that is the "),e("em",[t._v("target")]),t._v(" of the "),e("em",[t._v("assignment operation")]),t._v(").")]),t._v(" "),e("p",[e("img",{attrs:{src:s(266),alt:"Math != Coding"}})]),t._v(" "),e("p",[t._v("Then there's the notion of multiple equations in math. Take the following equations, for example:")]),t._v(" "),e("ul",[e("li",[t._v("a"),e("sup",[t._v("2")]),t._v(" + b"),e("sup",[t._v("2")]),t._v(" = c"),e("sup",[t._v("2")])]),t._v(" "),e("li",[t._v("a = 3")]),t._v(" "),e("li",[t._v("b = 4")])]),t._v(" "),e("p",[t._v('In regular math, these equations "co-exist". That is, they can be listed in any order and together they provide the basis for calculating the value of '),e("code",[t._v("c")]),t._v(".")]),t._v(" "),e("p",[t._v("If we wanted to use these equations to calculate the value of "),e("code",[t._v("c")]),t._v(", we would have to take care to first put the equations in a certain order and then make sure the calculations (performed on the "),e("strong",[t._v("rh")]),t._v(" of "),e("code",[t._v("=")]),t._v(") are stored in a variable on the left-hand of the equal sign.")]),t._v(" "),e("div",{staticClass:"language-csharp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-csharp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Values "),e("em",[e("strong",[t._v("must")])]),t._v(" exist in the variables "),e("code",[t._v("a")]),t._v(" and "),e("code",[t._v("b")]),t._v(" before the last line can calculate the value for "),e("code",[t._v("c")]),t._v(".")]),t._v(" "),e("p",[t._v("Furthermore, in the math equations, we can change the value of "),e("code",[t._v("a")]),t._v(" to be "),e("code",[t._v("8")]),t._v(' and the "new" value for '),e("code",[t._v("c")]),t._v(' is presumed to "automatically" be adjusted.')]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("a"),e("sup",[t._v("2")]),t._v(" + b"),e("sup",[t._v("2")]),t._v(" = c"),e("sup",[t._v("2")])]),t._v(" "),e("li",[t._v("a = 3")]),t._v(" "),e("li",[t._v("b = 4")])]),t._v(" "),e("p",[t._v("Therefore, "),e("code",[t._v("c")]),t._v(" is "),e("code",[t._v("5")]),t._v(". Now make this change:")]),t._v(" "),e("ul",[e("li",[t._v("a = 8")])]),t._v(" "),e("p",[t._v("Now, "),e("code",[t._v("c")]),t._v(" is "),e("code",[t._v("9.4")]),t._v(".")])]),t._v(" "),e("p",[t._v("But, if we take the c# code and write it as follows, the value of "),e("code",[t._v("c")]),t._v(" will remain as "),e("code",[t._v("5")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-csharp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-csharp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Output is 5")]),t._v("\n    a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Still is 5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The only way to change the value of "),e("code",[t._v("c")]),t._v(" is to "),e("em",[t._v("store")]),t._v(" the "),e("em",[t._v("re-calculated")]),t._v(" value in "),e("code",[t._v("c")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-csharp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-csharp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Output is 5")]),t._v("\n    a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sqrt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now it holds the updated value")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("In code, the "),e("em",[t._v("order")]),t._v(" of steps makes a big difference. Each instruction occurs "),e("strong",[t._v("in sequence")]),t._v(" - one after the other.")])])},[],!1,null,null,null);a.default=n.exports}}]);